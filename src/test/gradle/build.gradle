//
// This build file displays and allows test of the build info plugin
//
// This build file should not be used as an example of how to use 
// the plugin, it is only used for testing purposes.
//
apply plugin: 'war'
apply plugin: 'gradlecm'

description = 'Gradle CM Plugin test build file'

//
// This illustrates how the plugin supported properties are set/modified
//
def mySpecialVar = "Special Variable: Test"
buildinfo {
	//
	// If autowrite is turned off, you must place the buildinfo task as 
	// a dependency in any task you wish to use the buildinfo file
	//
	autowrite = true
	filename = "testinfo.properties"
	filedir = "build/buildinfodir"
	taskmap = [helloZip: "testingdir", jar: "META-INF"]
	custominfo = ["foo": "bar", "baz": "quux", "special": mySpecialVar]
}

buildreleaseinit {
	mainlinebranch = "mainline"
	releasebranch = "releasetestbranch"
}

buildreleaseupload {
	uploadtask = "uploadArchives"
}

task helloZip(type: Zip) {
	classifier = 'hello'
	from "." include "build.gradle"
}

task myZip (type: Zip) {
	classifier = 'myZip'
	from(".") {
		include "build.gradle" into "filedir"
	}

	//
	// Add buildinfo
	//
	from (buildinfo.filedir) {
		include buildinfo.filename into 'infodir'
	} 
}

buildscript {
	repositories {
	    mavenCentral()
	}
	
	dependencies {
		//
		// Normally these two are derived from dependency POM (test only)
		//
		classpath gradleApi()
		classpath 'org.eclipse.jgit:org.eclipse.jgit:2.1.0.201209190230-r'
		classpath 'org.apache.commons:commons-io:1.3.2'
		
		//
		// Obtain from parent output location (normally get from repository)
		//
		classpath fileTree(dir: '../../../build/libs', include: '*.jar')
	}
}
